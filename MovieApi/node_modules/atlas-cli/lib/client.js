import fetch from 'node-fetch';

import npmPackage from '../package.json';

class ApiClient {
  constructor(options = {}) {
    this.baseUrl = options.baseUrl || 'http://www.beautifulatlas.com/api';
    this.token = options.token;
    this.userAgent = `atlas-cli/${npmPackage.version}`;
    this.version = '2016-07-20';
  }

  fetch = (path, method, data) => {
    const body = JSON.stringify(data);

    // Construct headers
    const headers = {
      Accept: 'application/json',
      'Content-Type': 'application/json',
      'User-Agent': this.userAgent,
      Version: this.version,
      Authorization: `Bearer ${this.token}`,
    };

    // Construct request
    const request = fetch(`${this.baseUrl}${path}`, {
      method,
      body,
      headers,
      redirect: 'follow',
    });

    return new Promise((resolve, reject) => {
      request
      .then((response) => {
        if (response.status >= 200 && response.status < 300) {
          return response;
        }

        // Handle failed responses
        let error;
        try {
          // Expect API to return JSON
          error = JSON.parse(response);
        } catch (e) {
          // Expect call to fail without JSON response
          error = { error: response.statusText };
        }

        error.statusCode = response.status;
        error.response = response;
        return reject(error);
      })
      .then((response) => {
        return response.json();
      })
      .then((json) => {
        resolve(json);
      })
      .catch((e) => {
        reject({ error: e.message || 'Unknown error' });
      });
    });
  }

  post = (path, data) => {
    return this.fetch(path, 'POST', data);
  }
}

export default ApiClient;
